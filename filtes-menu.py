import os, time

# —Ü–≤–µ—Ç–∞ & –¥–≤–∏–∂–æ–∫ —Ç–µ–∫—Å—Ç–∞ –∫–∞–∫ —É chat gpt (–¥–∞ —è –µ–≥–æ —Ñ–∞–Ω–∞—Ç)
colors = {
    "BLACK": "\u001b[30;1m",
    "RED": "\u001b[31;1m",
    "GREEN": "\u001b[32;1m",
    "YELLOW": "\u001b[33;1m",
    "BLUE": "\u001b[34;1m",
    "PURPLE": "\u001b[35;1m",
    "LIGHT_BLUE": "\u001b[36;1m",
    "WHITE": "\u001b[37;1m",
    "CLEAR": "\u001b[0m",
}


# –±—Ä–∞–ª –∞–Ω—Å–∏ —Ü–≤–µ—Ç–∞ —Å —Å–∞–π—Ç–∞ https://dvmn.org/encyclopedia/python_strings/ansi-codes/

def sleep_typing(text: str, time_sleep: int):
    now = ""
    _time = 0
    for word in text:
        if _time != len(text) - 1:
            print(word, end="")
        else:
            print(word, end="\n" + colors["CLEAR"])
        _time += 1
        now += word
        time.sleep(time_sleep / 1000)


# https://stackoverflow.com/questions/55406457/copying-to-os-clipboard-without-importing-i-e-clipboard-pyperclip-in-python –≤–∑—è–ª –æ—Ç —Å—é–¥–∞

def copy(text):
    command = 'echo ' + text.strip() + '| clip'
    os.system(command)


# —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –∞ –µ—â–µ –º–Ω–µ –ª–µ–Ω—å –±—ã–ª–æ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –ø–æ—ç—Ç–æ–º—É –≤–∑—è–ª –≤—Å–µ —Ñ–∏–ª—Ç—Ä—ã —Å –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞
def upper(text: str):
    return text.upper()


def lower(text: str):
    return text.lower()


# –≤–∑—è–ª –∏–∑ —è–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞
def camel(text: str):
    result = ""
    is_next_upper = False
    for i in range(len(text)):
        if text[i] == " ":
            is_next_upper = True
        elif is_next_upper:
            result += text[i].upper()
            is_next_upper = False
        else:
            result += text[i]
    return result


def crazy(text: str):
    now = ""
    is_upper = False
    for i in text:
        if is_upper:
            is_upper = False
            now += i.upper()
            continue
        is_upper = True
        now += i.lower()
    return now


def snake(text: str):
    return text.replace(" ", "_")


def smile_face(text: str):
    return text.replace(" ", "üôÇ")


# debug
# print(smile_face("–ø—Ä–∏–≤–µ—Ç –º–∞–ª—å–∫–∏–π –º–∞–ª—å—á–∏–∫!"))

filters = {
    "0": {
        "name": "–ë–û–õ–¨–®–ò–ï –ë–£–ö–í–´",
        "description": "–î–µ–ª–∞–µ—Ç –±—É–∫–≤—ã –ë–û–õ–¨–®–ò–ú–ò",
        "func": upper
    },
    "1": {
        "name": "–º–∞–ª–µ–Ω—å–∫–∏–µ –±—É–∫–≤—ã",
        "description": "–î–µ–ª–∞–µ—Ç –±—É–∫–≤—ã –º–∞–ª–µ–Ω—å–∫–∏–º–∏",
        "func": lower
    },
    "2": {
        "name": "–≤–µ—Ä–±–ª—é–∂–∏–π–°—Ç–∏–ª—å",
        "description": "–£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –∏ —Å–ª–µ–¥—É—â–∏–µ —Å–ª–æ–≤–æ –ø–∏—à–µ—Ç —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã",
        "func": camel
    },
    "3": {
        "name": "–ß–µ–†–µ–î–æ–≤–ö–∞ –ë—É–ö–≤",
        "description": "–î–µ–ª–∞–µ—Ç —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤",
        "func": crazy
    },
    "4": {
        "name": "–ó–º–µ–∏–Ω—ã–π_—Å—Ç–∏–ª—å",
        "description": "–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –Ω–∏–∂–Ω—É—é —á–µ—Ä—Ç—É",
        "func": snake
    },
    "5": {
        "name": "–≠–º–æ–¥–∑–∏ —Å—Ç–∏–ª—å",
        "description": "–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ —É–ª—ã–±–∞–µ—à—å—Å—è —Å–º–∞–π–ª–∏–∫",
        "func": smile_face
    },
    "6": {
        "name": "–≤—ã—Ö–æ–¥",
        "description": "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
    }
}

last = ""

sleep_typing(colors["YELLOW"] + """
—Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É:
             __ __   ___   ____  ____   ____  __  _ 
            |  |  | /   \ |    \|    \ |    ||  |/ ]
            |  |  ||     ||  o  )  D  ) |  | |  ' / 
            |  _  ||  O  ||   _/|    /  |  | |    \ 
            |  |  ||     ||  |  |    \  |  | |     |
            |  |  ||     ||  |  |  .  \ |  | |  .  |
            |__|__| \___/ |__|  |__|\_||____||__|\_|
                     –∏ –û–û–û "–ü–µ–ª—å–º–∞–Ω–∞—è —Ö–æ–ø—Ä–∏–∫–∞"                               
""", 1)

sleep_typing(colors["LIGHT_BLUE"] + "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π—â–∏–∫ —Ñ–∏–ª—å—Ç–æ—Ä–æ–≤!", 5)

# –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while True:
    try:
        sleep_typing(colors["LIGHT_BLUE"] + "–í—ã–±–µ—Ä–µ—Ç–µ —Ü–∏—Ñ—Ä—É —Ñ–∏–ª—å—Ç—Ä–∞", 1)
        count = 0
        for _filter, item in filters.items():
            # —Å–æ—Ä—è–Ω –ø—Ä–æ—Å—Ç–æ –∫ —Ç–∞–∫–æ–º—É —Å—Ç–∏–ª—é —É–∂–µ –ø—Ä–∏–≤—ã–∫
            sleep_typing(str(count) + ") " + colors["PURPLE"] + item["name"], 1)
            count += 1

        id_filter = int(input())
        answer = filters.get(str(id_filter), "error 888")

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –∏ –≤—ã—Ö–æ–¥
        if answer == "error 888":
            sleep_typing(colors["RED"] + "–û—à–∏–±–∫–∞! –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π id" + colors["CLEAR"], 1)
            continue
        if answer["name"] == "–≤—ã—Ö–æ–¥":
            sleep_typing(colors["LIGHT_BLUE"] + "–î–æ—Å–≤–∏–¥–∞–Ω–∏—è!", 1)
            exit()

        # –æ–ø–∏—Å–∞–Ω–∏–µ
        sleep_typing("–û–ø–∏—Å–∞–Ω–∏–µ: " + colors["LIGHT_BLUE"] + answer["description"], 1)

        # —É—Ç–æ—á–Ω–µ–Ω–∏–µ
        sure = input(colors["LIGHT_BLUE"] + "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –¥–∞/–Ω–µ—Ç\n")
        if sure.lower() == "–¥–∞":
            text = ""
            # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –≤ –ø–∞–º—è—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —É–∂–µ –ø–µ—Ä–µ–¥–µ–ª–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
            if last != "":
                sleep_typing(colors["LIGHT_BLUE"] + "–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" + colors["CLEAR"], 1)
                sleep_typing("0) " + colors["PURPLE"] + "B—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∞ —Å—Ç–∞—Ä–æ–º —Ç–µ–∫—Å—Ç–µ", 1)
                sleep_typing("1) " + colors["PURPLE"] + "B—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –Ω–æ–≤–æ–º —Ç–µ–∫—Å—Ç–µ", 1)

                choice = int(input())
                if choice == 0:
                    text = last
                else:
                    text = input(colors["LIGHT_BLUE"] + "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä: " + colors["CLEAR"])
            else:
                text = input(colors["LIGHT_BLUE"] + "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä: " + colors["CLEAR"])

            # —Ä–µ–Ω–¥–µ—Ä —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
            sleep_typing(colors["LIGHT_BLUE"] + "–¢–µ–∫—Å—Ç —Å –ø—Ä–∏–º–µ–Ω–µ–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º: " + colors["CLEAR"] + answer["func"](text) +
                         "\n" + colors["LIGHT_BLUE"] + "—Ç–µ–∫—Å—Ç –±—ã–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ—Ñ–µ—Ä –æ–±–º–µ–Ω–∞", 1)
            # –∑–∞–º–µ–Ω–∞ –ø—Ä–æ—à–ª–æ–≥–æ —Ä–µ–Ω–¥–∞—Ä–∞, –Ω–æ–≤—ã–º
            last = answer["func"](text)
            # –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–Ω–¥–∞—Ä–∞
            copy(last)

        else:
            continue
    except Exception as e:
        sleep_typing(colors["RED"]+"–ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê –í–û–ó–†–ê–©–ï–ù–ò–ï –í –ù–ê–ß–ê–õ–û –¶–ò–ö–õ–ê")